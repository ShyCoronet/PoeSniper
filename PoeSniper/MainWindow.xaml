<Window x:Class="PoeSniper.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PoeSniper"
        xmlns:custom="clr-namespace:PoeSniperUI.CustomControls" xmlns:poesniperui="clr-namespace:PoeSniperUI" 
        d:DataContext="{d:DesignInstance Type=poesniperui:ApplicationViewModel}"
        mc:Ignorable="d"
        Title="MainWindow" MinHeight="600" MinWidth="1300" WindowStartupLocation="CenterScreen"
        WindowStyle="None" ResizeMode="CanResize" x:Name="root">
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0" CornerRadius="0" CaptionHeight="0" UseAeroCaptionButtons="False" ResizeBorderThickness="2"/>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <!--#region TitlePanelStyles-->
        <Style x:Key="TitleButtons" TargetType="{x:Type StackPanel}">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>
        <Style x:Key="TitleIcon" TargetType="{x:Type Path}">
            <Setter Property="Fill" Value="#b9bbbe"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="7,0,7,0"/>
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=IsMouseOver, UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="Fill" Value="#FFFFFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
        <Style x:Key="SearchSetupBorder" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Height" Value="60px"/>
            <Setter Property="Width" Value="Auto"/>
        </Style>
        <Style x:Key="CreateSearchButton" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                    <Setter Property="Opacity" Value="0.7"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Background="#2f3136">
        <Grid.RowDefinitions>
            <RowDefinition Height="24px"/>
            <RowDefinition Height="48px"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <!--#region TitlePanel-->
        <Grid x:Name="TitlePanel" Background="#202225" Grid.Row="0">
            <StackPanel Style="{StaticResource TitleButtons}">
                <Border x:Name="MinimizeButtonBorder" Cursor="Hand" MouseDown="MinimizeWindow">
                    <Path Style="{StaticResource TitleIcon}" x:Name="MinimizeButton" Data="{StaticResource Line}">
                        <Path.LayoutTransform>
                            <ScaleTransform ScaleX="0.03" ScaleY="0.03"/>
                        </Path.LayoutTransform>
                    </Path>
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=MinimizeButtonBorder}" Value="True">
                                    <Setter Property="Background" Value="#282b2e"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border x:Name="MaximizeButtonBorder" Cursor="Hand" MouseDown="MaximizeWindow">
                    <Path Style="{StaticResource TitleIcon}" x:Name="MaximizeButton" Data="{StaticResource Square}">
                        <Path.LayoutTransform>
                            <ScaleTransform ScaleX="0.02" ScaleY="0.02"/>
                        </Path.LayoutTransform>
                    </Path>
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=MaximizeButtonBorder}" Value="True">
                                    <Setter Property="Background" Value="#282b2e"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border  x:Name="CloseButtonBorder" Cursor="Hand" MouseDown="CloseWindow">
                    <Path Style="{StaticResource TitleIcon}" x:Name="CloseButton" Data="{StaticResource Cross}">
                        <Path.LayoutTransform>
                            <ScaleTransform ScaleX="0.02" ScaleY="0.02"/>
                        </Path.LayoutTransform>
                    </Path>
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=CloseButtonBorder}" Value="True">
                                    <Setter Property="Background" Value="#d55756"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </StackPanel>
        </Grid>
        <!--#endregion-->
        <!--#region MenuButtons-->
        <Grid Grid.Row="1">
            <Grid Grid.Column="0" Background="#2f3136">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <custom:MenuButton Grid.Column="0" x:Name="ResultButton" Text="Result" GroupName="MenuButtons"/>
                <custom:MenuButton Grid.Column="1" x:Name="SetupButton" Text="Setup" GroupName="MenuButtons" IsSelected="True"/>
                <custom:MenuButton Grid.Column="2" x:Name="SettingsButton" Text="Settings" GroupName="MenuButtons"/>
            </Grid>
        </Grid>
        <!--#endregion-->
        <!--#region Result-->
        <Grid Grid.Row="2">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSelected, ElementName=ResultButton}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
        <!--#endregion-->
        <!--#region Setup-->
        <Grid x:Name="SetupArea" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="8*"/>
            </Grid.RowDefinitions>
            <Border Margin="12,6,12,6" Background="#36393f" CornerRadius="12" Grid.Row="0">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Command="{Binding AddSearch}" Background="Green" Height="40px" Width="100px" Margin="0,0,6,0" 
                            Style="{StaticResource CreateSearchButton}">
                        <TextBlock Style="{StaticResource RobotoFontStyle}" Foreground="White" Text="Create search"/>
                    </Button>
                    <Button Background="#23a9f2" Height="40px" Margin="6,0,6,0" Width="100px" 
                            Style="{StaticResource ButtonStyle}"/>
                    <Button Background="#23a9f2" Height="40px" Margin="6,0,6,0" Width="100px" 
                            Style="{StaticResource ButtonStyle}"/>
                    <Button Background="#f04747" Height="40px" Margin="6,0,6,0" Width="100px" 
                            Style="{StaticResource ButtonStyle}"/>
                </StackPanel>
            </Border>
            <Border Margin="6,0,6,6" Grid.Row="1" CornerRadius="12" Background="#36393f">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <ItemsControl HorizontalAlignment="Center" ItemsSource="{Binding searches}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <custom:SearchBar Uid="{Binding Id}" TextName="{Binding IsActive}"
                                                  TextUrl="{Binding Url}" IsLoading="{Binding IsLoading}"
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.Connect}"
                                                  CommandParameter="{Binding}"
                                                  ToggleStateCommand="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.StartSearch}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Border>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSelected, ElementName=SetupButton}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
        <!--#endregion-->
        <!--#region Settings-->
        <Grid x:Name="SettingsArea" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="140px"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <!--#region POESESSID-->
            <Border x:Name="POESESSIDTitle" Grid.Row="0" Grid.Column="0" Style="{StaticResource InputBorder}"
                    Height="{Binding ElementName=POESESSIDBox, Path=Height}" Width="130px">
                <TextBlock Style="{StaticResource ResourceKey=RobotoFontStyle}" VerticalAlignment="Center" HorizontalAlignment="Center" 
                           FontSize="20px" Text="POESESSID" Foreground="#FFFFFF"/>
            </Border>
            <TextBox x:Name="POESESSIDBox" Grid.Row="0" Grid.Column="1" Style="{StaticResource Input}" 
                     Text="Teeeeeest" FontSize="14px" HorizontalAlignment="Left"/>
            <!--#endregion-->
            <!--#region AutoMode-->
            <Border x:Name="AutoModeTitle" Grid.Row="1" Grid.Column="0" Style="{StaticResource InputBorder}"
                    Height="{Binding ElementName=POESESSIDTitle, Path=Height}" Width="130px">
                <TextBlock Style="{StaticResource ResourceKey=RobotoFontStyle}" VerticalAlignment="Center" HorizontalAlignment="Center" 
                           FontSize="20px" Text="Auto mode" Foreground="#FFFFFF"/>
            </Border>
            <!--#endregion-->
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSelected, ElementName=SettingsButton}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
        <!--#endregion-->
    </Grid>
</Window>